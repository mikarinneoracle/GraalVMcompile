{"version":3,"sources":["components/Shared/Footer/Footer.tsx","components/Admin/Main/Main.tsx","components/Admin/Admin.tsx","components/Hmi/autobahn.svg","components/Hmi/Hmi.tsx","components/Shared/Header/Header.tsx","components/Mainpage/Mainpage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Footer","Box","padding","variant","radius","align","size","css","undefined","Link","driverTypeControl","width","name","label","checked","heaterControl","ACControl","serviceAccurancyControl","computeRequirementsControl","connectionQualityControl","Main","props","gutters","alignItems","Item","fullHeight","level","position","inputProps","onChange","event","setState","admin","batteryTemp","target","value","batteryCapacity","remainingBatteryCapacity","Admin","obj","process","useState","saved","localStorage","getItem","JSON","parse","stringify","adminObj","setAdminObj","setItem","className","column","textAlign","onClick","console","log","fetch","then","response","json","data","Hmi","stylesf2","border","justifyContent","height","cols","frameBorder","style","src","autobahnSvg","alt","justify","AreaChart","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","XAxis","dataKey","YAxis","fill","angle","CartesianGrid","strokeDasharray","Tooltip","cursor","Area","type","stroke","fillOpacity","space","MyNavigationBarItem","resolved","useResolvedPath","to","match","useMatch","path","pathname","end","useLinkClickHandler","active","href","String","children","Header","invert","element","Mainpage","autoSize","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6763cfd9.chunk.js","sourcesContent":["import React from 'react';\nimport {Box} from '@tbb/library/dist/components/atoms/Box/Box';\nimport {Link} from '@tbb/library/dist/components/atoms/Link/Link';\n\nconst Footer = () => (\n    <Box\n    padding=\"large\"\n    variant=\"body\"\n    radius=\"default\"\n    align=\"center\"\n    size=\"small\" css={undefined}    >\n      TBB Service Orchestration Demo © 2021 T-Systems International GmbH &nbsp;\n      &nbsp; | &nbsp; &nbsp;\n      <Link variant=\"secondary\">About</Link>\n      &nbsp; &nbsp; | &nbsp; &nbsp;\n      <Link variant=\"secondary\">Feedback</Link>\n    </Box>\n  );\n\nexport default Footer;","import {\n  Box,\n  Flex,\n  FormRow,\n  Headline,\n  LabelledInput,\n  SegmentedControl,\n  SegmentedControlItem,\n  Spacer,\n  Title,\n} from \"@tbb/library\";\nimport { useState } from \"react\";\n\nlet isDriverNormal = process.env.REACT_APP_DRIVER_TYPE === \"normal\";\nlet isHeaterOff = process.env.REACT_APP_HEATER === \"off\";\nlet isACOff = process.env.REACT_APP_AC === \"off\";\n\nlet isServiceAccuracyHigh = process.env.REACT_APP_SERVICE_ACCURACY === \"high\";\nlet isComputeRequirementComplex =\n  process.env.REACT_APP_COMPUTE_REQUIREMENT === \"complex\";\nlet isConnectionQualityGood =\n  process.env.REACT_APP_CONNECTION_QUALITY === \"good\";\n\n\nconst driverTypeControl = isDriverNormal ? (\n  <SegmentedControl width=\"full\">\n    <SegmentedControlItem name=\"drivertype\" label=\"normal\" checked css={undefined} />\n    <SegmentedControlItem name=\"drivertype\" label=\"fast\" css={undefined} />\n  </SegmentedControl>\n) : (\n  <SegmentedControl width=\"full\">\n    <SegmentedControlItem name=\"drivertype\" label=\"normal\" css={undefined} />\n    <SegmentedControlItem name=\"drivertype\" label=\"fast\" checked css={undefined} />\n  </SegmentedControl>\n);\n\nconst heaterControl = isHeaterOff ? (\n  <SegmentedControl width=\"full\">\n    <SegmentedControlItem name=\"heater\" label=\"on\" checked css={undefined} />\n    <SegmentedControlItem name=\"heater\" label=\"off\" css={undefined} />\n  </SegmentedControl>\n) : (\n  <SegmentedControl width=\"full\">\n    <SegmentedControlItem name=\"heater\" label=\"on\" css={undefined} />\n    <SegmentedControlItem name=\"heater\" label=\"off\" checked css={undefined} />\n  </SegmentedControl>\n);\n\nconst ACControl = isACOff ? (\n  <SegmentedControl width=\"full\">\n    <SegmentedControlItem name=\"ac\" label=\"on\" checked css={undefined} />\n    <SegmentedControlItem name=\"ac\" label=\"off\" css={undefined} />\n  </SegmentedControl>\n) : (\n  <SegmentedControl width=\"full\">\n    <SegmentedControlItem name=\"ac\" label=\"on\" css={undefined} />\n    <SegmentedControlItem name=\"ac\" label=\"off\" checked css={undefined} />\n  </SegmentedControl>\n);\n\nconst serviceAccurancyControl = isServiceAccuracyHigh ? (\n  <SegmentedControl width=\"full\">\n    <SegmentedControlItem name=\"serviceaccuracy\" label=\"high\" checked css={undefined} />\n    <SegmentedControlItem name=\"serviceaccuracy\" label=\"low\" css={undefined} />\n  </SegmentedControl>\n) : (\n  <SegmentedControl width=\"full\">\n    <SegmentedControlItem name=\"serviceaccuracy\" label=\"high\" checked css={undefined} />\n    <SegmentedControlItem name=\"serviceaccuracy\" label=\"low\" css={undefined} />\n  </SegmentedControl>\n);\n\nconst computeRequirementsControl = isComputeRequirementComplex ? (\n  <SegmentedControl width=\"full\">\n    <SegmentedControlItem name=\"computerequirements\" label=\"complex\" checked css={undefined} />\n    <SegmentedControlItem name=\"computerequirements\" label=\"simple\" css={undefined} />\n  </SegmentedControl>\n) : (\n  <SegmentedControl width=\"full\">\n    <SegmentedControlItem name=\"computerequirements\" label=\"complex\" css={undefined} />\n    <SegmentedControlItem name=\"computerequirements\" label=\"simple\" checked css={undefined} />\n  </SegmentedControl>\n);\n\nconst connectionQualityControl = isConnectionQualityGood ? (\n  <SegmentedControl width=\"full\">\n    <SegmentedControlItem name=\"connectionquality\" label=\"good\" checked css={undefined} />\n    <SegmentedControlItem name=\"connectionquality\" label=\"bad\" css={undefined} />\n  </SegmentedControl>\n) : (\n  <SegmentedControl width=\"full\">\n    <SegmentedControlItem name=\"connectionquality\" label=\"good\" css={undefined} />\n    <SegmentedControlItem name=\"connectionquality\" label=\"bad\" checked css={undefined} />\n  </SegmentedControl>\n);\n\nconst Main = (props: any) => {\n\n  return (\n    <Box padding=\"large\" css={undefined}>\n      <Flex gutters=\"large\" alignItems=\"stretch\">\n        <Flex.Item>\n          <Box variant=\"high\" radius=\"default\" padding=\"default\" fullHeight css={undefined}>\n            <fieldset>\n              <legend>\n                <Headline level={2}>Vehicle</Headline>\n              </legend>\n              <Spacer />\n              <FormRow>\n                <Title>Driver Type</Title>\n                <Spacer />\n                {driverTypeControl}\n              </FormRow>\n\n              <FormRow>\n                <Headline level={4}>Environment</Headline>\n              </FormRow>\n\n              <Title>Heater</Title>\n\n              <FormRow>{heaterControl}</FormRow>\n\n              <Title>AC</Title>\n\n              <FormRow>{ACControl}</FormRow>\n\n              <FormRow>\n                <Headline level={4}>Battery</Headline>\n              </FormRow>\n\n              <FormRow>\n                <LabelledInput\n                  label=\"Battery Temperature\"\n                  position=\"top\"\n                  inputProps={{\n                    onChange: (event: any) => {\n                      props.setState({ ...props.admin, batteryTemp: event.target.value });\n                    },\n                    value: props.admin.batteryTemp\n                  }}\n                />\n              </FormRow>\n\n              <FormRow>\n                <LabelledInput label=\"Battery Capacity\" position=\"top\"\n                  inputProps={{\n                    onChange: (event: any) => {\n                      props.setState({ ...props.admin, batteryCapacity: event.target.value });\n                    },\n                    value: props.admin.batteryCapacity\n\n                  }} />\n              </FormRow>\n\n              <FormRow>\n                <LabelledInput\n                  label=\"Remaining Battery Capacity\"\n                  position=\"top\"\n                  inputProps={{\n                    onChange: (event: any) => {\n                      props.setState({ ...props.admin, remainingBatteryCapacity: event.target.value });\n                    },\n                    value: props.admin.remainingBatteryCapacity\n\n\n                  }}\n                />\n              </FormRow>\n            </fieldset>\n          </Box>\n        </Flex.Item>\n\n        {/* <Flex.Item>\n          <Box variant=\"high\" radius=\"default\" padding=\"default\" fullHeight>\n            <fieldset>\n              <legend><Headline level={2}>Route</Headline></legend>\n              <Spacer/>\n  \n              // <FormRow>\n                <Headline level={4}>Start Position</Headline>\n              // </FormRow>\n              \n              // <FormRow>\n                <LabelledInput label=\"Longitude\" position=\"top\"/>\n              // </FormRow>\n              \n              // <FormRow>\n                <LabelledInput label=\"Latitude\" position=\"top\"/>\n              // </FormRow>\n              \n              // <FormRow>\n                <Headline level={4}>End Position</Headline>\n              // </FormRow>\n              \n              // <FormRow>\n                <LabelledInput label=\"Longitude\" position=\"top\"/>\n              // </FormRow>\n              \n              // <FormRow>\n                <LabelledInput label=\"Latitude\" position=\"top\"/>\n              // </FormRow>\n            </fieldset>\n          </Box>\n        </Flex.Item> */}\n\n        <Flex.Item>\n          <Box variant=\"high\" radius=\"default\" padding=\"default\" fullHeight css={undefined}>\n            <fieldset>\n              <legend>\n                <Headline level={2}>Service requirements</Headline>\n              </legend>\n              <Spacer />\n\n              <FormRow>\n                <Title>Service accuracy</Title>\n                <Spacer />\n                {serviceAccurancyControl}\n              </FormRow>\n\n              <FormRow>\n                <Title>Compute requirements</Title>\n                <Spacer />\n                {computeRequirementsControl}\n              </FormRow>\n\n              <FormRow>\n                <Title>Connection quality</Title>\n                <Spacer />\n                {connectionQualityControl}\n              </FormRow>\n            </fieldset>\n          </Box>\n        </Flex.Item>\n      </Flex>\n    </Box>\n  );\n};\n\n\nexport default Main;","import React, { useEffect, useState } from \"react\";\n\nimport { Flex, Box, Headline, Button } from \"@tbb/library\";\nimport Main from \"./Main/Main\";\nimport Footer from \"../Shared/Footer/Footer\";\nimport Header from \"../Shared/Header/Header\";\n\n// const Head = () => (\n//   <Flex gutters=\"small\" justify=\"space-between\" valign=\"bottom\">\n//     <Flex.Item>\n//       <Headlines />\n//     </Flex.Item>\n\n//     <Flex.Item textAlign=\"center\">{/* Optional Submenu */}</Flex.Item>\n\n//     <Flex.Item textAlign=\"right\">\n//       {/* Optional Right side elements, e.g. search/filter */}\n//     </Flex.Item>\n//   </Flex>\n// );\n//\nexport const Admin = () => {\n  let batteryTemp = process.env.REACT_APP_BATTERY_TEMP;\n  let batteryCapacity = process.env.REACT_APP_BATTERY_CAPACITY;\n  let remainingBatteryCapacity = process.env.REACT_APP_REMAINING_BATTERY_CAPACITY;\n  const obj = {\n    batteryTemp: batteryTemp,\n    batteryCapacity: batteryCapacity,\n    remainingBatteryCapacity: remainingBatteryCapacity,\n  }\n  const [adminObj, setAdminObj] = useState(() => {\n    // getting stored value\n    const saved = localStorage.getItem(\"adminObj\");\n    const initialValue = JSON.parse(saved ? saved : JSON.stringify(obj));\n    return initialValue || \"\";\n  });\n\n  localStorage.setItem(\"adminObj\", JSON.stringify(adminObj));\n\n  const saveClickHandler = () => {\n    console.log(\"Save clicked!\", adminObj);\n    fetch(process.env.REACT_APP_API_URL + '/v3/638afa70-5d87-4aaa-ba78-c1148d8dec2e')\n      .then(response => response.json())\n      .then(data => console.log(\"DATA\", data));\n  };\n\n  return (\n    <div className=\"admin size-large\">\n      <Flex column fullHeight>\n        <Flex.Item>\n          <Box padding=\"sidebar\" css={undefined}>\n            <Flex>\n              <Flex.Item textAlign=\"left\">\n                <Headline level={1}>Configuration</Headline>\n              </Flex.Item>\n              <Flex.Item textAlign=\"right\">\n                <Button\n                  size=\"small\"\n                  variant=\"primary\"\n                  onClick={saveClickHandler}\n                >\n                  {\" \"}\n                  Save{\" \"}\n                </Button>\n              </Flex.Item>\n            </Flex>\n          </Box>\n        </Flex.Item>\n        <Flex.Item>\n          <Main admin={adminObj} setState={setAdminObj} />\n        </Flex.Item>\n      </Flex>\n    </div>\n  );\n};\n\n\n\nexport default Admin;\n","export default __webpack_public_path__ + \"static/media/autobahn.4a071a2c.svg\";","\nimport React from 'react';\nimport { CartesianGrid, XAxis, YAxis, Tooltip, AreaChart, Area } from 'recharts';\nimport autobahnSvg from '../Hmi/autobahn.svg'\nimport myImage from '../Hmi/unavailable.jpg'\nimport './Hmi.css'\nimport { Flex, Box,Title,Icon,Spacer, Headline, Button } from \"@tbb/library\";\n\nconst data = [\n  {\n    \"X-Axis\": \"Start\",\n    \"Battery %\": 95\n  },\n  {\n    \"X-Axis\": \"100 km\",\n    \"Battery %\": 45\n  },\n  {\n    \"X-Axis\": \"200 km\",\n    \"Battery %\": 25\n  },\n  {\n    \"X-Axis\": \"220 km\",\n    \"Battery %\": 65\n  },\n  {\n    \"X-Axis\": \"300 km\",\n    \"Battery %\": 40\n  },\n  {\n    \"X-Axis\": \"380 km\",\n    \"Battery %\": 18\n  },\n  {\n    \"X-Axis\": \"400 km\",\n    \"Battery %\": 55\n  },\n  {\n    \"X-Axis\": \"430 km\",\n    \"Battery %\": 73\n  },\n  {\n    \"X-Axis\": \"500 km\",\n    \"Battery %\": 46\n  },\n  {\n    \"X-Axis\": \"Destination\",\n    \"Battery %\": 16\n  }\n];\n\n\nconst Hmi = () => {\n  <div data-testid=\"Hmi\" >\n    Hmi Component text\n  </div>\n\n  const styles = {\n    border: '1px solid rgba(0, 0, 0, 0.05)',\n    height: 120\n  };\n  const stylesf1 = {\n    border: '1px solid rgba(0, 0, 0, 0.05)',\n\n  };\n  const stylesf2 = {\n    border: '1px solid rgba(0, 0, 0, 0.05)',\n    justifyContent: 'space-between',\n    height: 300\n  };\n  return (\n\n    <div>\n      <Box padding=\"large\" className='bgColor1' css={undefined} >\n\n        <Flex column fullHeight\n           >\n\n          <Flex\n            cols={3}\n            gutters=\"large\"\n            frameBorder=\"default\"\n\n\n          >\n            <Flex.Item>\n\n            </Flex.Item>\n            <Flex.Item\n            >\n\n              <Title className='whiteIcon'>14:12</Title>\n\n            </Flex.Item>\n            <Flex.Item><Title>servO unavailable</Title>\n            \n            </Flex.Item>\n\n          </Flex>\n          <Flex\n            cols={3}\n            gutters=\"large\"\n            frameBorder=\"default\"\n            style={styles}\n          >\n            <Flex.Item align='left'>\n            <Flex.Item >\n            <Icon name='so-speed'  className='OtherText'/>\n            </Flex.Item>\n            <Flex.Item >\n            <Title className='OtherText'> Km/h </Title>\n            </Flex.Item>\n              \n            \n              <Flex.Item >\n              </Flex.Item>\n              \n                 <h1 className='whiteIcon'>120</h1> \n              \n              \n                \n           \n            \n             \n            </Flex.Item>\n            <Flex.Item align=\"center\" className='bgColor2'>\n            <img  src={autobahnSvg} className='OtherText' alt=\"auto bahn\"/>\n              \n              <Icon name='so-navi-straight'  className='batteryIcon' /> 212 Km\n                \n               \n            </Flex.Item>\n            <Flex.Item align=\"right\">\n              289\n              <Icon name='so-distance'  className='OtherText' />  Km\n               \n\n            </Flex.Item>\n          </Flex>\n          <Flex\n            cols={3}\n            gutters=\"large\"\n            frameBorder=\"default\"\n           // className=\"stylesflex\"\n            justify= 'center'\n            style={stylesf2}\n                       \n          >\n            <Flex.Item align=\"center\">\n              {/* <LineChart width={1500} height={250} data={data}\n                  margin={{ top: 5, right: 30, left: 150, bottom: 5 }}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <Tooltip />\n                  <Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" />\n                  <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\n              </LineChart> */}\n\n              <AreaChart width={1350} height={260} data={data} \n                margin={{ top: 10, right: 30, left: 140, bottom: 0 }}>\n                <defs>\n                  <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                    <stop offset=\"5%\" stopColor=\"#781048\" stopOpacity={0.8}/>\n                    <stop offset=\"95%\" stopColor=\"#781048\" stopOpacity={0}/>\n                  </linearGradient>\n                  {/* <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                    <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\n                    <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\n                  </linearGradient> */}\n                </defs>\n                <XAxis dataKey=\"X-Axis\">\n                  {/* <Label value=\"Range of vehicle\" offset={0} position=\"insideBottom\"  fill=\"#8884d8\"/> */}\n                </XAxis>\n                <YAxis dataKey=\"Battery %\" label={{ fill: \"#8884d8\", value: 'Battery %', angle: -90, position: 'insideLeft' }}>\n                  </YAxis>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n                <Area type=\"monotone\" dataKey=\"Battery %\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorUv)\" />\n              </AreaChart>\n            </Flex.Item>\n          </Flex>\n        </Flex>\n\n        <Spacer space={1}/>\n\n        <Flex\n          gutters=\"large\"\n          alignItems=\"stretch\"\n          style={stylesf2}\n         // className=\"stylesflex\"\n          cols={3}\n          //justify=\"space-between\"\n          frameBorder=\"default\">\n\n          <Flex.Item>\n            <Box className='boxColor' variant=\"high\" radius=\"default\" padding=\"default\" fullHeight css={undefined} >\n            <Icon name='so-destination'  className='batteryIcon'  />\n              <Title className='whiteIcon' > Arrival 20.48 </Title>\n              <Spacer/>\n              <Spacer className='OtherText'>\n               <Title className='size1'> Destination </Title>\n                </Spacer>\n                <Spacer className='OtherText'>\n                <Title>Französische Straẞe 30 </Title>\n                </Spacer>\n                <Spacer className='OtherText'>\n                <Title>10117 Berlin  </Title>\n                </Spacer>\n                <Spacer/>\n                <Spacer className='OtherText'>\n                <Title>574 Km  </Title>\n                </Spacer>\n                <Spacer className='OtherText'>\n                <Title>6 std 17 mint  </Title>\n                </Spacer>\n\n            </Box>\n          </Flex.Item>\n\n          \n\n          <Flex.Item align=\"center\" cols={3} frameBorder=\"default\">\n              \n              <Icon name='so-menu-battery' className='batteryIcon' />\n              <Title className='tab2'/>\n              <Icon name='so-menu-navi'  className='OtherIcon'/>\n              <Title className='tab2'/>\n              <Icon name='so-menu-media'  className='OtherIcon'/>\n              <Spacer/>\n              \n              <Title className='batteryText'>Battery</Title>\n              <Title className='tab1'/>\n              <Title className='OtherText'>Navi </Title>\n              <Title className='tab1'/>\n              <Title className='OtherText'>Media  </Title>           \n              </Flex.Item>\n\n          <Flex.Item> \n          \n\n\n            <Box className='boxColor' variant=\"high\" radius=\"default\" padding=\"default\" fullHeight css={undefined} >\n\n            <Title className='whiteIcon' > 2 Stops, 63 min in total <Icon name='so-stops'   className='batteryIcon' /></Title>\n              \n              <Spacer/>\n              <Spacer className='OtherText'>\n               <Title className='size1'> Next Stop </Title>\n                </Spacer>\n                <Spacer className='OtherText'>\n                <Title>Rastplaz Bad Hersfeld </Title>\n                </Spacer>\n                <Spacer className='OtherGreeIcon'>\n                <Icon name='so-fastcharge'   className='OtherGreeIcon' />\n                <Title className='OtherGreeIcon'>Fast Charging Station Reserved </Title>\n                </Spacer>\n                <Spacer/>\n                <Spacer className='OtherText'>\n                <Title>220 Km  </Title>\n                </Spacer>\n                <Spacer className='OtherText'>\n                <Title>2 std 25 mint  </Title>\n                </Spacer>\n\n            </Box>\n          </Flex.Item>\n\n        </Flex>\n      </Box>\n\n    </div>\n  );\n};\n\nexport default Hmi;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport {\n    useResolvedPath,\n    useMatch,\n    useLinkClickHandler,\n  } from \"react-router-dom\";\n\n  import {\n    Box,\n    Icon,\n    NavigationBar,\n    NavigationBarItem\n  } from \"@tbb/library\";\nimport Admin from '../../Admin/Admin';\nimport Hmi from '../../Hmi/Hmi';\n\nfunction MyNavigationBarItem(props: any) {\n    const resolved = useResolvedPath(props.to);\n    const match = useMatch({ path: resolved.pathname, end: true });\n    const onClick = useLinkClickHandler(props.to);\n    const right = props.right;\n    return (\n      <NavigationBarItem\n        active={!!match}\n        href={String(props.to)}\n        onClick={onClick}\n        right={right}\n      >\n        {props.children}\n      </NavigationBarItem>\n    );\n  }\n  \n  const Header = () => (\n    <Box padding=\"default\" variant=\"deep\" radius=\"default\" size=\"small\" css={undefined} invert>\n      <Router>\n        <NavigationBar>\n          <MyNavigationBarItem to={{ pathname: \"/tbbui\" }}>\n            <Icon name=\"tbbui\" />\n            tbb\n          </MyNavigationBarItem>\n          <MyNavigationBarItem to={{ pathname: \"/config\" }}>\n            config\n          </MyNavigationBarItem>\n          <MyNavigationBarItem to={{ pathname: \"/\" } }>\n            hu demo\n          </MyNavigationBarItem>\n          <MyNavigationBarItem to={{ pathname: \"#\" }} right>\n            test <Icon name=\"user\" />{\" \"}\n          </MyNavigationBarItem>\n        </NavigationBar>\n\n          <Routes>\n            <Route path='/' element={<Hmi />}></Route>\n            <Route path='/config' element={<Admin />}></Route>\n            <Route path='/hu-demo' element={<Hmi />}></Route>\n\n          </Routes>\n\n      </Router>\n    </Box>\n  );\n  \nexport default Header;","import { Flex } from '@tbb/library';\nimport React from 'react';\nimport Footer from '../Shared/Footer/Footer';\nimport Header from '../Shared/Header/Header';\nimport styles from './Mainpage.module.css';\n\nconst Mainpage = () => (\n  <div className=\"admin size-large\">\n      <Flex column fullHeight>\n        <Flex.Item autoSize>\n          <Header />\n        </Flex.Item>\n        <Flex.Item autoSize>\n          <Footer />\n        </Flex.Item>\n      </Flex>\n    </div>\n);\n\nexport default Mainpage;\n","import './App.css';\nimport Mainpage from './components/Mainpage/Mainpage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Mainpage></Mainpage>\n    </div>\n  );\n}\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nrequire('dotenv').config();\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n  \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}